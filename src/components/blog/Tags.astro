---
import clsx from "clsx";

interface Props {
  tags: string[];
  withAll?: boolean;
}

const pathname = Astro.url.pathname;
const { tags, withAll } = Astro.props;

const allTags = tags.map((tag) => {
  return {
    name: tag,
    link: `/blog/tags/${tag}`,
    isActive: pathname === `/blog/tags/${encodeURIComponent(tag)}`
  };
});

if (withAll) {
  allTags.unshift({
    name: "All",
    link: "/blog",
    isActive: pathname === "/blog"
  });
}
---

{
  allTags.map(({ name, isActive, link }) => (
    <a
      href={link}
      class={clsx(
        "inline-block cursor-pointer rounded-full border-2 px-3 py-1 text-sm font-semibold hover:bg-stone-900 hover:text-white dark:hover:bg-stone-200 dark:hover:text-stone-950",
        {
          "border-stone-900 bg-stone-900 text-white dark:bg-stone-200 dark:text-stone-950":
            isActive,
          "border-stone-700 text-stone-700 dark:border-stone-200 dark:text-stone-50 ": !isActive
        }
      )}
    >
      {name}
    </a>
  ))
}
