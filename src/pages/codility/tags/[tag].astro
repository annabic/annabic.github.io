---
import Layout from "../../../layouts/Layout.astro";
import Card from "../../../components/Card.astro";
import type { Frontmatter } from "../../../types";
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  GetStaticPaths,
  MarkdownInstance
} from "astro";

export const getStaticPaths = (async () => {
  const allPosts: Array<MarkdownInstance<Frontmatter>> = await Astro.glob<Frontmatter>("../*.md");
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts }
    };
  });
}) satisfies GetStaticPaths;

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { posts } = Astro.props;
const { tag } = Astro.params as Params;
---

<Layout title="Codility Lessons" description="Codility Lessons">
  <h1>Filtered by {tag}</h1>

  <!-- TODO: refactor common components, add filters -->

  <div class="mt-4 grid grid-cols-2 gap-4 sm:grid-cols-4">
    {posts.map((post) => <Card {...post.frontmatter} url={post.url} />)}
  </div>
</Layout>
